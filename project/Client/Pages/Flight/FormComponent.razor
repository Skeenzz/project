@inject HttpClient _client

<EditForm Model="@flight" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Destination: </label>
            <div>
                <InputText @bind-Value="@flight.GoingTo" class="form-control" />
                <ValidationMessage For="@(() => flight.GoingTo)" />
            </div>
        </div>

        <div class="form-group">
            <label>Image: </label>
            <div>
                <InputText @bind-Value="@flight.imgName_flight" class="form-control" />
                <ValidationMessage For="@(() => flight.imgName_flight)" />
            </div>
        </div>

        <div class="form-group">
            <label>Price$: </label>
            <div>
                <InputNumber @bind-Value="@flight.Price" class="form-control" />
                <ValidationMessage For="@(() => flight.Price)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <project.Client.Components.BackToList Target="Flight" />


</EditForm>

@code { 
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Flights flight { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Flights> Flight;

    protected async override Task OnInitializedAsync()
    {
        Flight = await _client.GetFromJsonAsync<List<Flights>>($"{Endpoints.FlightsEndpoint}");
    } }
